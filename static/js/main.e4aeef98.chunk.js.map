{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker..jsx","images/image.jpg","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterbottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","formControl","NativeSelect","default","onChange","e","target","i","App","state","fetcheddata","setState","this","image","src","coronaimg","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4aeef98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3DSm2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__jB1Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__16AA-\",\"card\":\"Cards_card__1WLKW\",\"infected\":\"Cards_infected__os7be\",\"recovered\":\"Cards_recovered__2HFzh\",\"deaths\":\"Cards_deaths__3fDhT\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color=\"text-secondary\" gutterbottom>Infected</Typography>\r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"text-secondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography color=\"BODY-2\">Number of active cases of Covid-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"text-secondary\" gutterbottom>Recovered</Typography>\r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"text-secondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography color=\"BODY-2\">Number of recoveries from Covid-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"text-secondary\" gutterbottom>Deaths</Typography>\r\n                       <Typography variant=\"h5\">\r\n                           <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"text-secondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography color=\"BODY-2\">Number of deaths caused by Covid-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data :{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        const modifiedData ={\r\n            confirmed: confirmed,\r\n            recovered: recovered,\r\n            deaths: deaths,\r\n            lastUpdate: lastUpdate,\r\n        }\r\n        return modifiedData;\r\n\r\n\r\n\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async()=>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n\r\n        }));\r\n        return modifiedData;\r\n\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try{\r\n      const {data:{countries}} = await axios.get(`${url}/countries`);\r\n      return countries.map((country)=>country.name);\r\n    }catch(error){\r\n\r\n    }\r\n}","import { LinearProgress } from '@material-ui/core';\r\nimport React ,{useState,useEffect}from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setDailyData (await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n      dailyData.length!==0\r\n      ?(<Line\r\n        data ={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets: [{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill : true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill : true,\r\n\r\n            }],\r\n        }}\r\n      />): null\r\n    );\r\n    console.log(confirmed,recovered,deaths);\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n              data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets: [{\r\n                    label:'People',\r\n                    backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n               \r\n              }}\r\n              options={{\r\n                  legend: {display:false},\r\n                  title:{display:true,text:`Current state in ${country}`},\r\n              }}\r\n            />\r\n\r\n        ):null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n           {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,formControl, StylesProvider} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async ()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n        <formControl className={styles.formControl}>\r\n           <NativeSelect default=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n             <option value=\"\">Global</option> \r\n             {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}  \r\n            </NativeSelect> \r\n        </formControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.625a6baa.jpg\";","import React from 'react'\r\n// import Cards from './components/Cards/Cards';37:00\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaimg from './images/image.jpg';\r\n\r\n\r\nclass App extends React.Component{\r\nstate ={\r\n    data:{},\r\n    country:'',\r\n}\r\n    async componentDidMount (){\r\n        const fetcheddata = await fetchData();\r\n        this.setState({data:fetcheddata})\r\n    }\r\n    \r\n    handleCountryChange = async (country)=>{\r\n        const fetcheddata = await fetchData(country);\r\n        this.setState({data:fetcheddata,country:country});\r\n\r\n    }\r\n    render(){\r\n        const {data,country} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaimg} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Dr6xU\",\"image\":\"App_image__1lhxf\"};"],"sourceRoot":""}